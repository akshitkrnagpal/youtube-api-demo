{"version":3,"sources":["app/components/PlaceholderInfo.js","app/redux/middlewares/axios.js","app/redux/middlewares/index.js","app/redux/actionTypes.js","app/redux/reducers/search.js","app/redux/reducers/sort.js","app/redux/reducers/index.js","app/redux/store.js","app/config.js","app/redux/actions/sort.js","app/components/SearchInput.js","app/redux/actions/search.js","app/components/SearchResults.js","app/components/SortByButtonGroup.js","app/components/ToggleOrderButtonGroup.js","app/components/YoutubeVideoResult.js","app/fontawesome.js","app/index.js","index.js"],"names":["PlaceholderInfo","_this$props","this","props","icon","text","react_default","a","createElement","reactstrap_es","className","body","style","minHeight","index_es","size","spin","Component","client","axios","create","baseURL","responseType","axiosMiddleware","middlewares","applyMiddleware","logger","SEARCH_YOUTUBE","SET_SORT_BY","SET_ORDER","DEFAULT_STATE","error","items","loading","sortBy","undefined","order","reducers","combineReducers","search","state","arguments","length","action","type","Object","objectSpread","payload","data","console","log","sort","field","store","createStore","YOUTUBE_API_KEY","setOrder","setSortBy","SearchInput","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","query","_onChange","bind","assertThisInitialized","_onSubmit","onSubmit","value","onChange","placeholder","addonType","color","onClick","event","setState","target","preventDefault","dispatch","request","url","params","part","q","maxResults","key","connect","SearchResults","_loading","components_PlaceholderInfo","_error","message","response","_items","components_ToggleOrderButtonGroup","SortByButtonGroup","_renderItems","filter","item","id","kind","_sortBy","_order","A","B","snippet","title","localeCompare","moment","utc","publishedAt","diff","map","components_YoutubeVideoResult","videoId","ToggleOrderButtonGroup","_setSortByDate","_setSortByTitle","disabled","_setAscending","_setDescending","AClassName","DClassName","YoutubeVideoResult","youtubeLink","concat","_openYoutube","_this$props$snippet","description","thumbnails","date","fromNow","top","src","high","bottom","right","window","open","library","add","faExclamation","faSearch","faSpinner","App","es","components_SearchInput","components_SearchResults","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.e8f2ae51.chunk.js","sourcesContent":["// @flow\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport React, { Component } from 'react';\nimport { Card, CardText, Row } from 'reactstrap';\n\ntype Props = {\n    icon: string;\n    text: string;\n};\n\nclass PlaceholderInfo extends Component<Props> {\n    render() {\n        const { icon, text } = this.props;\n        return (\n            <Row className = 'my-5'>\n                <Card body\n                    className = 'text-center p-5 justify-content-center'\n                    style = {{ minHeight: '30rem' }}\n                >\n                    <FontAwesomeIcon\n                        className = 'mx-auto my-5'\n                        icon = { icon }\n                        size = '5x'\n                        spin = { icon === 'spinner' }\n                    />\n                    <CardText className = 'lead'>\n                        { text }\n                    </CardText>\n                </Card>\n            </Row>\n        );\n    }\n}\n\nexport default PlaceholderInfo;\n","import axios from 'axios';\nimport axiosMiddleware from 'redux-axios-middleware';\n\nconst client = axios.create({\n    baseURL: 'https://www.googleapis.com/youtube/v3',\n    responseType: 'json'\n});\n\nexport default axiosMiddleware(client);\n","import { applyMiddleware } from 'redux';\n\nimport logger from 'redux-logger';\n\nimport axios from './axios';\n\nconst middlewares = applyMiddleware(\n    axios,\n    logger\n);\n\nexport default middlewares;\n","export const SEARCH_YOUTUBE = 'SEARCH_YOUTUBE';\nexport const SEARCH_YOUTUBE_SUCCESS = 'SEARCH_YOUTUBE_SUCCESS';\nexport const SEARCH_YOUTUBE_FAIL = 'SEARCH_YOUTUBE_FAIL';\n\nexport const SET_SORT_BY = 'SET_SORT_BY';\nexport const SET_ORDER = 'SET_ORDER';\n","// @flow\n\nimport {\n    SEARCH_YOUTUBE,\n    SEARCH_YOUTUBE_SUCCESS,\n    SEARCH_YOUTUBE_FAIL\n} from '../actionTypes';\n\ntype State = {\n    error: Object | null;\n    items: Array<Object>;\n    loading: boolean;\n};\n\nconst DEFAULT_STATE: State = {\n    error: null,\n    items: [],\n    loading: false\n}\n\nexport default (state: State = DEFAULT_STATE, action: Object) => {\n    switch (action.type) {\n        case SEARCH_YOUTUBE:\n            return {\n                ...state,\n                loading: true,\n                error: null\n            };\n\n        case SEARCH_YOUTUBE_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                items: action.payload.data.items\n            };\n\n        case SEARCH_YOUTUBE_FAIL:\n        console.log(action);\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n                items: []\n            };\n\n        default:\n            return state;\n    }\n}\n","// @flow\n\nimport {\n    SET_SORT_BY,\n    SET_ORDER\n} from '../actionTypes';\n\ntype State = {\n    sortBy: 'string' | typeof undefined;\n    order: 'asc' | 'desc';\n};\n\nconst DEFAULT_STATE: State = {\n    sortBy: undefined,\n    order: 'asc'\n};\n\nexport default (state: State = DEFAULT_STATE, action: Object) => {\n    switch (action.type) {\n        case SET_SORT_BY:\n            return {\n                ...state,\n                sortBy: action.field\n            }\n\n        case SET_ORDER:\n            return {\n                ...state,\n                order: action.order\n            }\n\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\n\nimport search from './search';\nimport sort from './sort';\n\nconst reducers = combineReducers({\n    search,\n    sort\n});\n\nexport default reducers;\n","import { createStore } from 'redux';\n\nimport middlewares from './middlewares';\nimport reducers from './reducers'\n\nconst store = createStore(reducers, middlewares);\n\nexport default store;\n","export const YOUTUBE_API_KEY = 'AIzaSyCqoOSI3aVApyUMm1Y3nX9p2yAKObqJ_eE';\n","// @flow\n\nimport { SET_SORT_BY, SET_ORDER } from '../actionTypes';\n\nexport function setOrder(order: 'asc' | 'desc') {\n    return {\n        type: SET_ORDER,\n        order\n    };\n}\n\nexport function setSortBy(field: string) {\n    return {\n        type: SET_SORT_BY,\n        field\n    };\n}\n","// @flow\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport type { Dispatch } from 'redux';\nimport {\n    Button,\n    Form,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    Row\n} from 'reactstrap';\n\nimport { searchYoutube } from '../redux';\n\ntype Props = {\n    dispatch: Dispatch<*>;\n};\n\ntype State = {\n    query: string;\n};\n\nclass SearchInput extends Component<Props, State> {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            query: ''\n        };\n\n        this._onChange = this._onChange.bind(this);\n        this._onSubmit = this._onSubmit.bind(this);\n    }\n\n    render() {\n        const { query } = this.state;\n\n        return (\n            <Row className = 'py-5'>\n                <Form onSubmit = { this._onSubmit } className = 'w-100'>\n                    <InputGroup size = 'lg'>\n                        <Input\n                            value = { query }\n                            onChange = { this._onChange }\n                            placeholder = 'Search'\n                        />\n                        <InputGroupAddon addonType = 'append'>\n                            <Button\n                                color = 'danger'\n                                onClick = { this._onSubmit } >\n                                Search Youtube\n                            </Button>\n                        </InputGroupAddon>\n                    </InputGroup>\n                </Form>\n            </Row>\n        );\n    }\n\n    _onChange: (*) => void;\n\n    _onChange(event) {\n        this.setState({\n            query: event.target.value\n        });\n    }\n\n    _onSubmit: (*) => void;\n\n    _onSubmit(event) {\n        event.preventDefault()\n        this.props.dispatch(searchYoutube(this.state.query));\n    }\n}\n\nexport default connect()(SearchInput);\n","// @flow\n\nimport { YOUTUBE_API_KEY } from '../../config';\nimport { SEARCH_YOUTUBE } from '../actionTypes';\n\nexport function searchYoutube(query: string) {\n    return {\n        type: SEARCH_YOUTUBE,\n        payload: {\n            request: {\n                url: '/search',\n                params: {\n                    part: 'snippet',\n                    q: query,\n                    maxResults: 25, \n                    key: YOUTUBE_API_KEY\n                }\n            }\n        }\n    };\n}\n","// @flow\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport type { Dispatch } from 'redux';\nimport { Row } from 'reactstrap';\nimport moment from 'moment';\n\nimport {\n    PlaceholderInfo,\n    SortByButtonGroup,\n    ToggleOrderButtonGroup,\n    YoutubeVideoResult\n} from '../components';\n\ntype Props = {\n    dispatch: Dispatch<*>;\n    _error: Object;\n    _items: Array<Object>;\n    _loading: boolean;\n    _sortBy: string;\n    _order: 'asc' | 'desc';\n};\n\nclass SearchResults extends Component<Props> {\n    render() {\n\n        // Return Loading.\n        if (this.props._loading) {\n            return <PlaceholderInfo icon = 'spinner'/>\n        }\n\n        // Return Error Message.\n        if (this.props._error) {\n            const error = this.props._error;\n            const message = error.data || error.response.data.error.message;\n            return <PlaceholderInfo icon = 'exclamation' text = { message || 'Some Error Occured' } />\n        }\n\n        // Return PLaceholder for Search.\n        if (this.props._items.length <= 0) {\n            return <PlaceholderInfo icon = 'search' text = 'Search for videos' />\n        }\n\n        // Return Search Results.\n        return (\n            <Row>\n                <div className = 'clearfix w-100 py-4'>\n                    <div className = 'float-right'>\n                        <ToggleOrderButtonGroup />\n                        <SortByButtonGroup />\n                    </div>\n                </div>\n                <div className='card-deck'>\n                    { this._renderItems() }\n                </div>\n            </Row>\n        );\n    }\n\n    _renderItems() {\n        // Don't consider Items other than Videos (like Channels).\n        const items = this.props._items.filter(item => item.id.kind === 'youtube#video');\n\n        // Sort based on Title\n        if( this.props._sortBy === 'title' ) {\n            if ( this.props._order === 'asc' ) {\n                items.sort((A, B) => A.snippet.title.localeCompare(B.snippet.title) );\n            } else {\n                items.sort((A, B) => B.snippet.title.localeCompare(A.snippet.title) );\n            }\n        }\n\n        // Sort based on publishedDate\n        if( this.props._sortBy === 'publishedDate' ) {\n            if ( this.props._order === 'asc' ) {\n                items.sort((A, B) => moment.utc(A.snippet.publishedAt).diff(moment.utc(B.snippet.publishedAt)));\n            } else {\n                items.sort((A, B) => moment.utc(B.snippet.publishedAt).diff(moment.utc(A.snippet.publishedAt)));\n            }\n        }\n\n        return items.map(item => (\n            <YoutubeVideoResult\n                key = { item.id.videoId }\n                videoId = { item.id.videoId }\n                snippet = { item.snippet }\n            />\n        ));\n    }\n}\n\nfunction _mapStateToProps(state) {\n    return {\n        _loading: state.search.loading,\n        _items: state.search.items,\n        _error: state.search.error,\n        _sortBy: state.sort.sortBy,\n        _order: state.sort.order\n    };\n}\n\nexport default connect(_mapStateToProps)(SearchResults);\n","// @flow\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport type { Dispatch } from 'redux';\nimport { Button, ButtonGroup } from 'reactstrap';\n\nimport { setSortBy } from '../redux';\n\ntype Props = {\n    dispatch: Dispatch<*>;\n    _sortBy: string;\n    _order: 'asc' | 'desc';\n};\n\nclass ToggleOrderButtonGroup extends Component<Props> {\n    constructor(props) {\n        super(props);\n\n        this._setSortByDate = this._setSortByDate.bind(this);\n        this._setSortByTitle = this._setSortByTitle.bind(this);\n    }\n\n    render() {\n        return (\n            <ButtonGroup size = 'sm' className = 'mx-3'>\n                <Button disabled color = 'secondary'>Sort By</Button>\n                <Button\n                    color = 'light'\n                    className = { (this.props._sortBy === 'title') ? 'active' : '' }\n                    onClick = { this._setSortByTitle }\n                > Title </Button>\n                <Button\n                    color = 'light'\n                    className = { (this.props._sortBy === 'publishedDate') ? 'active' : '' }\n                    onClick = { this._setSortByDate }\n                > Published Date </Button>\n            </ButtonGroup>\n        );\n    }\n\n    _setSortByTitle: (*) => void;\n\n    _setSortByTitle() {\n        this.props._sortBy !== 'title' && this.props.dispatch(setSortBy('title'));\n    }\n\n    _setSortByDate: (*) => void;\n\n    _setSortByDate() {\n        this.props._sortBy !== 'publishedDate' && this.props.dispatch(setSortBy('publishedDate'));\n    }\n}\n\nfunction _mapStateToProps(state) {\n    return {\n        _order: state.sort.order,\n        _sortBy: state.sort.sortBy\n    };\n}\n\nexport default connect(_mapStateToProps)(ToggleOrderButtonGroup);\n","// @flow\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport type { Dispatch } from 'redux';\nimport { ButtonGroup, Button } from 'reactstrap';\n\nimport { setOrder } from '../redux';\n\ntype Props = {\n    dispatch: Dispatch<*>;\n    _sortBy: string;\n    _order: 'asc' | 'desc';\n};\n\nclass ToggleOrderButtonGroup extends Component<Props> {\n    constructor(props) {\n        super(props);\n\n        this._setAscending = this._setAscending.bind(this);\n        this._setDescending = this._setDescending.bind(this);\n    }\n\n    render() {\n        if (this.props._sortBy === undefined) {\n            return null;\n        }\n        const AClassName = (this.props._order === 'asc') ? 'active' : '';\n        const DClassName = (this.props._order === 'desc') ? 'active' : '';\n\n        return (\n            <ButtonGroup size = 'sm' className = 'mx-3'>\n                <Button disabled color = 'secondary'>Order</Button>\n                <Button\n                    color = 'light'\n                    className = { AClassName }\n                    onClick = { this._setAscending }> Asc </Button>\n                <Button\n                    color = 'light'\n                    className = { DClassName }\n                    onClick = { this._setDescending }> Desc </Button>\n            </ButtonGroup>\n        );\n    }\n\n    _setAscending: (*) => void;\n\n    _setAscending() {\n        this.props._order !== 'asc' && this.props.dispatch(setOrder('asc'))\n    }\n\n    _setDescending: (*) => void;\n\n    _setDescending() {\n        this.props._order !== 'desc' && this.props.dispatch(setOrder('desc'))\n    }\n}\n\nfunction _mapStateToProps(state) {\n    return {\n        _order: state.sort.order,\n        _sortBy: state.sort.sortBy\n    };\n}\n\nexport default connect(_mapStateToProps)(ToggleOrderButtonGroup);\n","// @flow\n\nimport React, { Component } from 'react';\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardFooter,\n    CardImg,\n    CardImgOverlay,\n    CardTitle,\n    CardText\n} from 'reactstrap';\n\nimport moment from 'moment';\n\ntype Props = {\n    snippet: Object;\n    videoId: string;\n};\n\nclass YoutubeVideoResult extends Component<Props> {\n\n    youtubeLink: string;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.youtubeLink = `https://www.youtube.com/watch?v=${props.videoId}`\n\n        this._openYoutube = this._openYoutube.bind(this);\n    }\n\n    render() {\n        const {\n            title,\n            description,\n            thumbnails,\n            publishedAt\n        } = this.props.snippet;\n\n        const date = moment(publishedAt).fromNow();\n\n        return (\n            <Card className = 'mb-4'>\n                <CardImg top src = { thumbnails.high.url } />\n                <CardImgOverlay>\n                    <Button\n                        className = 'position-absolute'\n                        style = {{ bottom: '0.4rem', right: '0.4rem' }}\n                        color = 'danger'\n                        size = 'sm'\n                        onClick = { this._openYoutube }\n                    > View </Button>\n                </CardImgOverlay>\n                <CardBody className = 'pb-0'>\n                    <CardTitle> { title } </CardTitle>\n                    <CardText className = 'py-2'> { description } </CardText>\n                </CardBody>\n                <CardFooter>\n                    <small className = 'text-muted'> Uploaded { date } </small>\n                </CardFooter>\n            </Card>\n        );\n    }\n\n    _openYoutube: (*) => void;\n\n    _openYoutube() {\n        window.open(this.youtubeLink, '_blank')\n    }\n}\n\nexport default YoutubeVideoResult;\n","import { library } from '@fortawesome/fontawesome-svg-core';\n\nimport { faExclamation } from '@fortawesome/free-solid-svg-icons'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faExclamation);\nlibrary.add(faSearch);\nlibrary.add(faSpinner);\n","// @flow\n\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { Container } from 'reactstrap';\n\nimport { SearchInput } from './components';\n\nimport { store } from './redux';\n\nimport { SearchResults } from './components';\n\nimport './fontawesome';\n\ntype Props = {};\n\nclass App extends Component<Props> {\n    render() {\n        return (\n            <Provider store = { store }>\n                <Container>\n                    <SearchInput />\n                    <SearchResults />\n                </Container>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}