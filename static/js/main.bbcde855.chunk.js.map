{"version":3,"sources":["app/redux/middlewares/axios.js","app/redux/middlewares/index.js","app/redux/actionTypes.js","app/redux/reducers/search.js","app/redux/reducers/sort.js","app/redux/reducers/index.js","app/redux/store.js","app/redux/actions/search.js","app/config.js","app/redux/actions/sort.js","app/components/LoadMoreResults.js","app/components/PlaceholderInfo.js","app/components/SearchInput.js","app/components/SearchResults.js","app/components/SortByButtonGroup.js","app/components/ToggleOrderButtonGroup.js","app/components/YoutubeVideoResult.js","app/fontawesome.js","app/index.js","index.js"],"names":["client","axios","create","baseURL","responseType","axiosMiddleware","middlewares","applyMiddleware","DEFAULT_STATE","error","items","loading","query","nextPageToken","sortBy","undefined","order","reducers","combineReducers","search","state","action","type","payload","request","params","pageToken","concat","data","config","q","sort","field","store","createStore","searchYoutube","url","part","maxResults","key","process","setOrder","setSortBy","LoadMoreResults","Component","constructor","props","super","this","_loadMoreResults","bind","render","text","_loading","Button","disabled","color","size","onClick","dispatch","_query","_nextPageToken","connect","PlaceholderInfo","icon","Row","className","Card","body","style","minHeight","spin","CardText","SearchInput","_onChange","_onSubmit","Form","onSubmit","InputGroup","Input","value","onChange","placeholder","InputGroupAddon","addonType","event","setState","target","preventDefault","SearchResults","_items","length","_error","message","response","SortByButtonGroup","_renderItems","filter","item","id","kind","_sortBy","_order","A","B","snippet","title","localeCompare","moment","utc","publishedAt","diff","map","videoId","ToggleOrderButtonGroup","_setSortByDate","_setSortByTitle","ButtonGroup","_setAscending","_setDescending","AClassName","DClassName","YoutubeVideoResult","youtubeLink","_openYoutube","description","thumbnails","date","fromNow","CardImg","top","src","high","CardImgOverlay","bottom","right","CardBody","CardTitle","CardFooter","window","open","library","add","faExclamation","faSearch","faSpinner","App","Container","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bbcde855.chunk.js","sourcesContent":["import axios from 'axios';\nimport axiosMiddleware from 'redux-axios-middleware';\n\nconst client = axios.create({\n    baseURL: 'https://www.googleapis.com/youtube/v3',\n    responseType: 'json'\n});\n\nexport default axiosMiddleware(client);\n","import { applyMiddleware } from 'redux';\n\nimport logger from 'redux-logger';\n\nimport axios from './axios';\n\nvar middlewares = [ axios ];\n\n// For development\nif( process.env.NODE_ENV === 'development' ) {\n    middlewares.push(logger);\n}\n\nexport default applyMiddleware(...middlewares);\n","export const SEARCH_YOUTUBE = 'SEARCH_YOUTUBE';\nexport const SEARCH_YOUTUBE_SUCCESS = 'SEARCH_YOUTUBE_SUCCESS';\nexport const SEARCH_YOUTUBE_FAIL = 'SEARCH_YOUTUBE_FAIL';\n\nexport const SET_SORT_BY = 'SET_SORT_BY';\nexport const SET_ORDER = 'SET_ORDER';\n","// @flow\n\nimport {\n    SEARCH_YOUTUBE,\n    SEARCH_YOUTUBE_SUCCESS,\n    SEARCH_YOUTUBE_FAIL\n} from '../actionTypes';\n\ntype State = {\n    error: Object | null;\n    items: Array<Object>;\n    loading: boolean;\n    query: string | null;\n    nextPageToken: string | null;\n};\n\nconst DEFAULT_STATE: State = {\n    error: null,\n    items: [],\n    loading: false,\n    query: '',\n    nextPageToken: null\n}\n\nexport default (state: State = DEFAULT_STATE, action: Object) => {\n    switch (action.type) {\n        case SEARCH_YOUTUBE:\n\n            const items = ( action.payload.request.params.pageToken ) ? state.items : [] ;\n\n            return {\n                ...state,\n                items,\n                loading: true,\n                error: null,\n            };\n\n        case SEARCH_YOUTUBE_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                // $FlowFixMe\n                items: state.items.concat(action.payload.data.items),\n                query: action.payload.config.params.q,\n                nextPageToken: action.payload.data.nextPageToken\n            };\n\n        case SEARCH_YOUTUBE_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n                items: []\n            };\n\n        default:\n            return state;\n    }\n}\n","// @flow\n\nimport {\n    SET_SORT_BY,\n    SET_ORDER\n} from '../actionTypes';\n\ntype State = {\n    sortBy: 'string' | typeof undefined;\n    order: 'asc' | 'desc';\n};\n\nconst DEFAULT_STATE: State = {\n    sortBy: undefined,\n    order: 'asc'\n};\n\nexport default (state: State = DEFAULT_STATE, action: Object) => {\n    switch (action.type) {\n        case SET_SORT_BY:\n            return {\n                ...state,\n                sortBy: action.field\n            }\n\n        case SET_ORDER:\n            return {\n                ...state,\n                order: action.order\n            }\n\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\n\nimport search from './search';\nimport sort from './sort';\n\nconst reducers = combineReducers({\n    search,\n    sort\n});\n\nexport default reducers;\n","import { createStore } from 'redux';\n\nimport middlewares from './middlewares';\nimport reducers from './reducers'\n\nconst store = createStore(reducers, middlewares);\n\nexport default store;\n","// @flow\n\nimport { YOUTUBE_API_KEY } from '../../config';\nimport { SEARCH_YOUTUBE } from '../actionTypes';\n\nexport function searchYoutube(query: string, pageToken: string | null = null) {\n    return {\n        type: SEARCH_YOUTUBE,\n        payload: {\n            request: {\n                url: '/search',\n                params: {\n                    part: 'snippet',\n                    q: query,\n                    pageToken,\n                    maxResults: 10,\n                    key: YOUTUBE_API_KEY\n                }\n            }\n        }\n    };\n}\n","export const YOUTUBE_API_KEY = process.env.REACT_APP_YOUTUBE_API_KEY;\n","// @flow\n\nimport { SET_SORT_BY, SET_ORDER } from '../actionTypes';\n\nexport function setOrder(order: 'asc' | 'desc') {\n    return {\n        type: SET_ORDER,\n        order\n    };\n}\n\nexport function setSortBy(field: string) {\n    return {\n        type: SET_SORT_BY,\n        field\n    };\n}\n","// @flow\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport type { Dispatch } from 'redux';\nimport { Button } from 'reactstrap';\n\nimport { searchYoutube } from '../redux';\n\ntype Props = {\n    dispatch: Dispatch<*>;\n    _loading: boolean;\n    _nextPageToken: string | null;\n    _query: string;\n};\n\nclass LoadMoreResults extends Component<Props> {\n    constructor(props) {\n        super(props);\n\n        this._loadMoreResults = this._loadMoreResults.bind(this);\n    }\n\n    render() {\n        const text = ( this.props._loading ) ? 'Loading...' : 'See More Results';\n\n        return (\n            <Button\n                disabled = { this.props._loading }\n                color = 'danger'\n                size = 'lg'\n                onClick = { this._loadMoreResults }\n            >\n                { text }\n            </Button>\n        );\n    }\n\n    _loadMoreResults: (*) => void;\n\n    _loadMoreResults() {\n        this.props.dispatch(searchYoutube(this.props._query, this.props._nextPageToken));\n    }\n}\n\nfunction _mapStateToProps(state) {\n    return {\n        _loading: state.search.loading,\n        _query: state.search.query,\n        _nextPageToken: state.search.nextPageToken\n    };\n}\n\nexport default connect(_mapStateToProps)(LoadMoreResults);\n","// @flow\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport React, { Component } from 'react';\nimport { Card, CardText, Row } from 'reactstrap';\n\ntype Props = {\n    icon: string;\n    text: string;\n};\n\nclass PlaceholderInfo extends Component<Props> {\n    render() {\n        const { icon, text } = this.props;\n        return (\n            <Row className = 'my-5'>\n                <Card body\n                    className = 'text-center p-5 justify-content-center'\n                    style = {{ minHeight: '30rem' }}\n                >\n                    <FontAwesomeIcon\n                        className = 'mx-auto my-5'\n                        icon = { icon }\n                        size = '5x'\n                        spin = { icon === 'spinner' }\n                    />\n                    <CardText className = 'lead'>\n                        { text }\n                    </CardText>\n                </Card>\n            </Row>\n        );\n    }\n}\n\nexport default PlaceholderInfo;\n","// @flow\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport type { Dispatch } from 'redux';\nimport {\n    Button,\n    Form,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    Row\n} from 'reactstrap';\n\nimport { searchYoutube } from '../redux';\n\ntype Props = {\n    dispatch: Dispatch<*>;\n};\n\ntype State = {\n    query: string;\n};\n\nclass SearchInput extends Component<Props, State> {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            query: ''\n        };\n\n        this._onChange = this._onChange.bind(this);\n        this._onSubmit = this._onSubmit.bind(this);\n    }\n\n    render() {\n        const { query } = this.state;\n\n        return (\n            <Row className = 'py-5'>\n                <Form onSubmit = { this._onSubmit } className = 'w-100'>\n                    <InputGroup size = 'lg'>\n                        <Input\n                            value = { query }\n                            onChange = { this._onChange }\n                            placeholder = 'Search'\n                        />\n                        <InputGroupAddon addonType = 'append'>\n                            <Button\n                                color = 'danger'\n                                onClick = { this._onSubmit } >\n                                Search Youtube\n                            </Button>\n                        </InputGroupAddon>\n                    </InputGroup>\n                </Form>\n            </Row>\n        );\n    }\n\n    _onChange: (*) => void;\n\n    _onChange(event) {\n        this.setState({\n            query: event.target.value\n        });\n    }\n\n    _onSubmit: (*) => void;\n\n    _onSubmit(event) {\n        event.preventDefault()\n        this.props.dispatch(searchYoutube(this.state.query));\n    }\n}\n\nexport default connect()(SearchInput);\n","// @flow\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport type { Dispatch } from 'redux';\nimport { Row } from 'reactstrap';\nimport moment from 'moment';\n\nimport {\n    LoadMoreResults,\n    PlaceholderInfo,\n    SortByButtonGroup,\n    ToggleOrderButtonGroup,\n    YoutubeVideoResult\n} from '../components';\n\ntype Props = {\n    dispatch: Dispatch<*>;\n    _error: Object;\n    _items: Array<Object>;\n    _loading: boolean;\n    _sortBy: string;\n    _order: 'asc' | 'desc';\n};\n\nclass SearchResults extends Component<Props> {\n    render() {\n\n        // Return Loading.\n        if (this.props._loading && this.props._items.length <= 0) {\n            return <PlaceholderInfo icon = 'spinner'/>\n        }\n\n        // Return Error Message.\n        if (this.props._error) {\n            const error = this.props._error;\n            const message = error.data || error.response.data.error.message;\n            return <PlaceholderInfo icon = 'exclamation' text = { message || 'Some Error Occured' } />\n        }\n\n        // Return PLaceholder for Search.\n        if (this.props._items.length <= 0) {\n            return <PlaceholderInfo icon = 'search' text = 'Search for videos' />\n        }\n\n        // Return Search Results.\n        return (\n            <Row>\n                <div className = 'clearfix w-100 py-4'>\n                    <div className = 'float-right'>\n                        <ToggleOrderButtonGroup />\n                        <SortByButtonGroup />\n                    </div>\n                </div>\n                <div className='card-deck'>\n                    { this._renderItems() }\n                </div>\n                <div className = 'text-center w-100 py-4'>\n                    <LoadMoreResults />\n                </div>\n            </Row>\n        );\n    }\n\n    _renderItems() {\n        // Don't consider Items other than Videos (like Channels).\n        const items = this.props._items.filter(item => item.id.kind === 'youtube#video');\n\n        // Sort based on Title\n        if( this.props._sortBy === 'title' ) {\n            if ( this.props._order === 'asc' ) {\n                items.sort((A, B) => A.snippet.title.localeCompare(B.snippet.title) );\n            } else {\n                items.sort((A, B) => B.snippet.title.localeCompare(A.snippet.title) );\n            }\n        }\n\n        // Sort based on publishedDate\n        if( this.props._sortBy === 'publishedDate' ) {\n            if ( this.props._order === 'asc' ) {\n                items.sort((A, B) => moment.utc(A.snippet.publishedAt).diff(moment.utc(B.snippet.publishedAt)));\n            } else {\n                items.sort((A, B) => moment.utc(B.snippet.publishedAt).diff(moment.utc(A.snippet.publishedAt)));\n            }\n        }\n\n        return items.map(item => (\n            <YoutubeVideoResult\n                key = { item.id.videoId }\n                videoId = { item.id.videoId }\n                snippet = { item.snippet }\n            />\n        ));\n    }\n}\n\nfunction _mapStateToProps(state) {\n    return {\n        _loading: state.search.loading,\n        _items: state.search.items,\n        _error: state.search.error,\n        _sortBy: state.sort.sortBy,\n        _order: state.sort.order\n    };\n}\n\nexport default connect(_mapStateToProps)(SearchResults);\n","// @flow\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport type { Dispatch } from 'redux';\nimport { Button, ButtonGroup } from 'reactstrap';\n\nimport { setSortBy } from '../redux';\n\ntype Props = {\n    dispatch: Dispatch<*>;\n    _sortBy: string;\n    _order: 'asc' | 'desc';\n};\n\nclass ToggleOrderButtonGroup extends Component<Props> {\n    constructor(props) {\n        super(props);\n\n        this._setSortByDate = this._setSortByDate.bind(this);\n        this._setSortByTitle = this._setSortByTitle.bind(this);\n    }\n\n    render() {\n        return (\n            <ButtonGroup size = 'sm' className = 'mx-3'>\n                <Button disabled color = 'secondary'>Sort By</Button>\n                <Button\n                    color = 'light'\n                    className = { (this.props._sortBy === 'title') ? 'active' : '' }\n                    onClick = { this._setSortByTitle }\n                > Title </Button>\n                <Button\n                    color = 'light'\n                    className = { (this.props._sortBy === 'publishedDate') ? 'active' : '' }\n                    onClick = { this._setSortByDate }\n                > Published Date </Button>\n            </ButtonGroup>\n        );\n    }\n\n    _setSortByTitle: (*) => void;\n\n    _setSortByTitle() {\n        this.props._sortBy !== 'title' && this.props.dispatch(setSortBy('title'));\n    }\n\n    _setSortByDate: (*) => void;\n\n    _setSortByDate() {\n        this.props._sortBy !== 'publishedDate' && this.props.dispatch(setSortBy('publishedDate'));\n    }\n}\n\nfunction _mapStateToProps(state) {\n    return {\n        _order: state.sort.order,\n        _sortBy: state.sort.sortBy\n    };\n}\n\nexport default connect(_mapStateToProps)(ToggleOrderButtonGroup);\n","// @flow\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport type { Dispatch } from 'redux';\nimport { ButtonGroup, Button } from 'reactstrap';\n\nimport { setOrder } from '../redux';\n\ntype Props = {\n    dispatch: Dispatch<*>;\n    _sortBy: string;\n    _order: 'asc' | 'desc';\n};\n\nclass ToggleOrderButtonGroup extends Component<Props> {\n    constructor(props) {\n        super(props);\n\n        this._setAscending = this._setAscending.bind(this);\n        this._setDescending = this._setDescending.bind(this);\n    }\n\n    render() {\n        if (this.props._sortBy === undefined) {\n            return null;\n        }\n        const AClassName = (this.props._order === 'asc') ? 'active' : '';\n        const DClassName = (this.props._order === 'desc') ? 'active' : '';\n\n        return (\n            <ButtonGroup size = 'sm' className = 'mx-3'>\n                <Button disabled color = 'secondary'>Order</Button>\n                <Button\n                    color = 'light'\n                    className = { AClassName }\n                    onClick = { this._setAscending }> Asc </Button>\n                <Button\n                    color = 'light'\n                    className = { DClassName }\n                    onClick = { this._setDescending }> Desc </Button>\n            </ButtonGroup>\n        );\n    }\n\n    _setAscending: (*) => void;\n\n    _setAscending() {\n        this.props._order !== 'asc' && this.props.dispatch(setOrder('asc'))\n    }\n\n    _setDescending: (*) => void;\n\n    _setDescending() {\n        this.props._order !== 'desc' && this.props.dispatch(setOrder('desc'))\n    }\n}\n\nfunction _mapStateToProps(state) {\n    return {\n        _order: state.sort.order,\n        _sortBy: state.sort.sortBy\n    };\n}\n\nexport default connect(_mapStateToProps)(ToggleOrderButtonGroup);\n","// @flow\n\nimport React, { Component } from 'react';\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardFooter,\n    CardImg,\n    CardImgOverlay,\n    CardTitle,\n    CardText\n} from 'reactstrap';\n\nimport moment from 'moment';\n\ntype Props = {\n    snippet: Object;\n    videoId: string;\n};\n\nclass YoutubeVideoResult extends Component<Props> {\n\n    youtubeLink: string;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.youtubeLink = `https://www.youtube.com/watch?v=${props.videoId}`\n\n        this._openYoutube = this._openYoutube.bind(this);\n    }\n\n    render() {\n        const {\n            title,\n            description,\n            thumbnails,\n            publishedAt\n        } = this.props.snippet;\n\n        const date = moment(publishedAt).fromNow();\n\n        return (\n            <Card className = 'mb-4'>\n                <CardImg top src = { thumbnails.high.url } />\n                <CardImgOverlay>\n                    <Button\n                        className = 'position-absolute'\n                        style = {{ bottom: '0.4rem', right: '0.4rem' }}\n                        color = 'danger'\n                        size = 'sm'\n                        onClick = { this._openYoutube }\n                    > View </Button>\n                </CardImgOverlay>\n                <CardBody className = 'pb-0'>\n                    <CardTitle> { title } </CardTitle>\n                    <CardText className = 'py-2'> { description } </CardText>\n                </CardBody>\n                <CardFooter>\n                    <small className = 'text-muted'> Uploaded { date } </small>\n                </CardFooter>\n            </Card>\n        );\n    }\n\n    _openYoutube: (*) => void;\n\n    _openYoutube() {\n        window.open(this.youtubeLink, '_blank')\n    }\n}\n\nexport default YoutubeVideoResult;\n","import { library } from '@fortawesome/fontawesome-svg-core';\n\nimport { faExclamation } from '@fortawesome/free-solid-svg-icons'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faExclamation);\nlibrary.add(faSearch);\nlibrary.add(faSpinner);\n","// @flow\n\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { Container } from 'reactstrap';\n\nimport { store } from './redux';\n\nimport {\n    SearchInput,\n    SearchResults\n } from './components';\n\nimport './fontawesome';\n\ntype Props = {};\n\nclass App extends Component<Props> {\n    render() {\n        return (\n            <Provider store = { store }>\n                <Container>\n                    <SearchInput />\n                    <SearchResults />\n                </Container>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}